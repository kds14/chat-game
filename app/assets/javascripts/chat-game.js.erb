const playerSpeed = 5;
const gameWidth = 640;
const gameHeight = 480;
const backgroundColor = 0x29a329;
const buttonWidth = 128;
const buttonHeight = 64;
const url = "http://localhost:3000/";

const app = new PIXI.Application({
    width: gameWidth,
    height: gameHeight,
    backgroundColor: backgroundColor
});
document.body.appendChild(app.view);

const menuStage = new PIXI.Container();
const gameStage = new PIXI.Container();

gameStage.interactive = true;
gameStage.hitArea = new PIXI.Rectangle(0, 0, gameWidth, gameHeight);
gameStage.on("mousedown", onClick);

const loader = PIXI.loader;
loader.add('joinButton', "<%= image_path('join_button.png') %>");
loader.add('player', "<%= image_path('face.png') %>")
const sprites = {};
let otherPlayers = [];
let playerTexture;

app.stage = menuStage;

let prevTime = 0;

createButton(gameWidth / 2, gameHeight / 2 - buttonHeight, "JOIN", onJoinClick, menuStage);
createButton(gameWidth / 2, gameHeight / 2 + buttonHeight, "HOST", onHostClick, menuStage);

loader.load((loader, resources) =>
{
    playerTexture = resources.player.texture
    sprites.player = new PIXI.Sprite(playerTexture);

    sprites.player.anchor.set(0.5);
    sprites.player.x = 50;
    sprites.player.y = 50;
    sprites.player.goal = null;
    gameStage.addChild(sprites.player);

    window.addEventListener("keydown", onKeyDown, false);

    gameLoop(0);
});

function createButton(x, y, text, onButtonClick, stage)
{
    const button = new PIXI.Graphics();
    button.beginFill(0xFFFFFF);
    button.lineStyle(5, 0x000000);
    button.drawRect(x - (buttonWidth / 2), y - (buttonHeight / 2),
        buttonWidth, buttonHeight);
    button.buttonMode = true;
    button.interactive = true;
    button.on("pointerdown", onButtonClick);
    const btext = new PIXI.Text(text);
    btext.anchor.set(0.5);
    btext.x = x;
    btext.y = y;
    button.addChild(btext);
    stage.addChild(button);
}

function onJoinClick(e)
{
    console.log(sprites.player)
    console.log(gameStage)
    app.stage = gameStage;
}

function onLoad()
{
    console.log(this.responseText);
    let r = JSON.parse(this.responseText);
    if(r !== null && r.hasOwnProperty("room"))
    {
        app.stage = gameStage;
        update_players(r.room.players, r.client_id);
    }
}

function update_players(players, client_id)
{
    for(let p in players)
    {
        let r = null;
        if(client_id === players[p].id)
        {
            r = sprites.player 
        }
        else
        {   
            let r = otherPlayers.find(item => item.id == players[p].id);
            if(r === null)
            {
                r = new PIXI.Sprite(playerTexture);
                r.x = players[p].goal_x
                r.y = players[p].goal_y
                r.id = players[p].id
                otherPlayers.push(r)
                gameStage.addChild(r);
            }
        }
        r.goal = { x: players[p].goal_x, y: players[p].goal_y };
    }
}

function onHostClick(e)
{
    let req = new XMLHttpRequest();
    req.open("GET", url + "game/create");
    req.addEventListener("load", onLoad);
    req.send();
    console.log(req);
}

function update(delta)
{
    switch(app.stage)
    {
        case menuStage:
            break;
        case gameStage:
            handleMovement(sprites.player);
            for(let p in otherPlayers)
            {
                handleMovement(p);
            }
            break;
        default:
            break;
    }
}

function gameLoop(currentTime)
{
    let delta = currentTime - prevTime;
    update(delta);
    prevTime = currentTime;
    window.requestAnimationFrame(gameLoop);
}

function playerPos(player)
{
    let x = player.x + player.width / 2;
    let y = player.y + player.height / 2;
    return { x:x, y:y };
}

function handleMovement(player)
{
    if (player.goal !== null)
    {
        // calculate distance to move x and y
        let xDelta = player.goal.x - player.x;
        let yDelta = player.goal.y - player.y;

        if (Math.abs(xDelta) + Math.abs(yDelta) < 5)
        {
            player.x = player.goal.x;
            player.y = player.goal.y;
            player.goal = null;
        }

        let theta = Math.atan(xDelta / yDelta);
        let x = Math.abs(Math.sin(theta));
        let y = Math.abs(Math.cos(theta));

        player.x += Math.sign(xDelta) * x * playerSpeed;
        player.y += Math.sign(yDelta) * y * playerSpeed;

    }
}

function onClick(e)
{
    sprites.player.goal = { x:0, y:0 }
    sprites.player.goal.x = e.data.global.x
    sprites.player.goal.y = e.data.global.y
}

function onKeyDown(e)
{
    e.preventDefault();
    if (e.key.length === 1)
    {
        console.log(e.key);
    }
}

