let type = "WebGL"
if(!PIXI.utils.isWebGLSupported()) {
    type = "canvas"
}

PIXI.utils.sayHello(type);

const playerSpeed = 5;

let app = new PIXI.Application({
    width: 640,
    height: 480,
    backgroundColor: 0x29a329
});

document.body.appendChild(app.view);

let stage = new PIXI.Container();
stage.interactive = true;
stage.hitArea = new PIXI.Rectangle(0, 0, 640, 480);

stage.on("mousedown", onClick);

app.stage = stage;
let player = PIXI.Sprite.fromImage("<%= image_path('face.png') %>");
player.x = 50;
player.y = 50;
player.goal = null;
app.stage.addChild(player);

let prevTime = 0;

function update(delta)
{
    handleMovement(player);
}

function gameLoop(currentTime)
{
    let delta = currentTime - prevTime;
    update(delta);
    prevTime = currentTime;
    window.requestAnimationFrame(gameLoop);
}

gameLoop(0);

function playerPos(player)
{
    let x = player.x + player.width / 2;
    let y = player.y + player.height / 2;
    return { x:x, y:y };
}

function handleMovement(player)
{
    if (player.goal !== null)
    {
        let pos = playerPos(player);
        // calculate distance to move x and y
        let xDelta = player.goal.x - pos.x;
        let yDelta = player.goal.y - pos.y;

        if (Math.abs(xDelta) + Math.abs(yDelta) < 10)
        {
            player.x = player.goal.x - player.width / 2;
            player.y = player.goal.y - player.height / 2;
            player.goal = null;
        }

        let theta = Math.atan(xDelta / yDelta);
        let x = Math.abs(Math.sin(theta));
        let y = Math.abs(Math.cos(theta));

        player.x += Math.sign(xDelta) * x * playerSpeed;
        player.y += Math.sign(yDelta) * y * playerSpeed;

    }
}

function onClick(e)
{
    player.goal = { x:0, y:0 }
    player.goal.x = e.data.global.x
    player.goal.y = e.data.global.y
}

function onKeyDown(e)
{
    e.preventDefault();
    if (e.key.length === 1)
    {
        console.log(e.key);
    }
}

window.addEventListener("keydown", onKeyDown, false);
